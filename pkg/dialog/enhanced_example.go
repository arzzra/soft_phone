package dialog

import (
	"context"
	"fmt"
	"log"
	"strings"
	"time"
)

// ExampleEnhancedSIPStack –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —É–ª—É—á—à–µ–Ω–Ω–æ–≥–æ SIP —Å—Ç–µ–∫–∞
func ExampleEnhancedSIPStack() error {
	fmt.Println("=== Enhanced SIP Stack Example ===")

	// –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
	config := DefaultEnhancedSIPStackConfig()
	config.ListenAddr = "127.0.0.1:5080"
	config.Username = "alice"
	config.Domain = "example.com"
	config.EnableDebug = true
	config.EnableRefer = true
	config.EnableReplaces = true

	// –°–æ–∑–¥–∞–µ–º SIP —Å—Ç–µ–∫
	stack, err := NewEnhancedSIPStack(config)
	if err != nil {
		return fmt.Errorf("–æ—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è SIP —Å—Ç–µ–∫–∞: %w", err)
	}
	defer stack.Stop()

	// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º callbacks
	stack.SetOnIncomingCall(func(event *EnhancedIncomingCallEvent) {
		log.Printf("üìû –í—Ö–æ–¥—è—â–∏–π –∑–≤–æ–Ω–æ–∫ –æ—Ç %s", event.From)
		log.Printf("   Call-ID: %s", event.CallID)
		log.Printf("   SDP: %s", event.SDP)
		log.Printf("   Custom Headers: %v", event.CustomHeaders)

		if event.ReplaceCallID != "" {
			log.Printf("   üîÑ Replaces Call-ID: %s", event.ReplaceCallID)
		}

		// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏–Ω–∏–º–∞–µ–º –∑–≤–æ–Ω–æ–∫
		err := event.Dialog.AcceptCall("v=0\r\no=alice 123 456 IN IP4 127.0.0.1\r\n")
		if err != nil {
			log.Printf("–û—à–∏–±–∫–∞ –ø—Ä–∏–Ω—è—Ç–∏—è –∑–≤–æ–Ω–∫–∞: %v", err)
		}
	})

	stack.SetOnCallState(func(event *EnhancedCallStateEvent) {
		log.Printf("üìà –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–∏–∞–ª–æ–≥–∞:")
		log.Printf("   Call-ID: %s", event.Dialog.GetCallID())
		log.Printf("   –°–æ—Å—Ç–æ—è–Ω–∏–µ: %s -> %s", event.PrevState, event.State)
		log.Printf("   –ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: %s", event.Dialog.GetDirection())

		if event.Error != nil {
			log.Printf("   ‚ùå –û—à–∏–±–∫–∞: %v", event.Error)
		}
	})

	// –ó–∞–ø—É—Å–∫–∞–µ–º —Å—Ç–µ–∫
	err = stack.Start()
	if err != nil {
		return fmt.Errorf("–æ—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ SIP —Å—Ç–µ–∫–∞: %w", err)
	}

	log.Printf("üöÄ Enhanced SIP —Å—Ç–µ–∫ –∑–∞–ø—É—â–µ–Ω –Ω–∞ %s", config.ListenAddr)

	// –î–æ–±–∞–≤–ª—è–µ–º –∫–∞—Å—Ç–æ–º–Ω—ã–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏
	stack.AddCustomHeader("X-Custom-App", "GoSoftphone-Enhanced")
	stack.AddCustomHeader("X-Version", "1.0.0")

	// –î–µ–ª–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –∑–≤–æ–Ω–æ–∫
	time.Sleep(2 * time.Second)

	customHeaders := map[string]string{
		"X-Call-Type": "test",
		"X-Priority":  "high",
	}

	dialog, err := stack.MakeCall("sip:bob@127.0.0.1:5060",
		"v=0\r\no=alice 123 456 IN IP4 127.0.0.1\r\n", customHeaders)
	if err != nil {
		log.Printf("‚ùå –û—à–∏–±–∫–∞ –∏—Å—Ö–æ–¥—è—â–µ–≥–æ –∑–≤–æ–Ω–∫–∞: %v", err)
	} else {
		log.Printf("üì§ –ò—Å—Ö–æ–¥—è—â–∏–π –∑–≤–æ–Ω–æ–∫ —Å–æ–∑–¥–∞–Ω: %s", dialog.GetCallID())
	}

	// –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
	time.Sleep(5 * time.Second)
	stats := stack.GetStatistics()
	log.Printf("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
	log.Printf("   –ê–∫—Ç–∏–≤–Ω—ã–µ –¥–∏–∞–ª–æ–≥–∏: %d", stats.ActiveDialogs)
	log.Printf("   –í—Å–µ–≥–æ INVITE: %d", stats.TotalInvites)
	log.Printf("   –í—Å–µ–≥–æ BYE: %d", stats.TotalByes)
	log.Printf("   –í—Å–µ–≥–æ REFER: %d", stats.TotalRefers)
	log.Printf("   –£—Å–ø–µ—à–Ω—ã–µ –∑–≤–æ–Ω–∫–∏: %d", stats.SuccessfulCalls)
	log.Printf("   –ù–µ—É–¥–∞—á–Ω—ã–µ –∑–≤–æ–Ω–∫–∏: %d", stats.FailedCalls)

	return nil
}

// ExampleEnhancedREFER –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ REFER (RFC 3515)
func ExampleEnhancedREFER() error {
	fmt.Println("=== Enhanced REFER Example ===")

	config := DefaultEnhancedSIPStackConfig()
	config.ListenAddr = "127.0.0.1:5082"
	config.Username = "transfer_server"
	config.EnableRefer = true
	config.EnableReplaces = true

	stack, err := NewEnhancedSIPStack(config)
	if err != nil {
		return fmt.Errorf("–æ—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è SIP —Å—Ç–µ–∫–∞: %w", err)
	}
	defer stack.Stop()

	stack.SetOnCallState(func(event *EnhancedCallStateEvent) {
		log.Printf("REFER State: %s -> %s", event.PrevState, event.State)

		if event.State == EStateReferred {
			log.Printf("üìã –ü–æ–ª—É—á–µ–Ω REFER –∑–∞–ø—Ä–æ—Å –¥–ª—è Call-ID: %s", event.Dialog.GetCallID())
			// –°–∏–º—É–ª–∏—Ä—É–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ REFER
			go func() {
				time.Sleep(2 * time.Second)
				event.Dialog.dialogFSM.Event(context.Background(), string(EEventReferAccepted))
			}()
		}
	})

	err = stack.Start()
	if err != nil {
		return fmt.Errorf("–æ—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å—Ç–µ–∫–∞: %w", err)
	}

	log.Printf("üöÄ Enhanced REFER —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ %s", config.ListenAddr)

	// –°–∏–º—É–ª–∏—Ä—É–µ–º REFER –æ–ø–µ—Ä–∞—Ü–∏—é
	time.Sleep(2 * time.Second)

	// –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –¥–∏–∞–ª–æ–≥
	dialog, err := NewEnhancedOutgoingSIPDialog(stack, "sip:bob@example.com", "test-sdp", nil)
	if err != nil {
		return err
	}

	// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ established –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ REFER
	dialog.dialogState = EStateEstablished
	stack.dialogs[dialog.GetCallID()] = dialog

	// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º REFER —Å Replaces
	err = dialog.SendRefer("sip:charlie@example.com", "replace-call-id-123")
	if err != nil {
		log.Printf("‚ùå –û—à–∏–±–∫–∞ REFER: %v", err)
	} else {
		log.Printf("üì§ REFER –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω —Å Replaces")
	}

	time.Sleep(3 * time.Second)
	return nil
}

// ExampleEnhancedCallReplacement –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –∑–∞–º–µ–Ω—É –∑–≤–æ–Ω–∫–æ–≤ (RFC 3891)
func ExampleEnhancedCallReplacement() error {
	fmt.Println("=== Enhanced Call Replacement Example ===")

	config := DefaultEnhancedSIPStackConfig()
	config.ListenAddr = "127.0.0.1:5084"
	config.Username = "replacement_server"
	config.EnableReplaces = true

	stack, err := NewEnhancedSIPStack(config)
	if err != nil {
		return fmt.Errorf("–æ—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è SIP —Å—Ç–µ–∫–∞: %w", err)
	}
	defer stack.Stop()

	stack.SetOnIncomingCall(func(event *EnhancedIncomingCallEvent) {
		if event.ReplaceCallID != "" {
			log.Printf("üîÑ –ü–æ–ª—É—á–µ–Ω INVITE —Å Replaces: %s", event.ReplaceCallID)
			log.Printf("   –ó–∞–º–µ–Ω—è–µ–º—ã–π –¥–∏–∞–ª–æ–≥: %s", event.ReplaceCallID)

			// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏–Ω–∏–º–∞–µ–º –∑–∞–º–µ–Ω—É
			event.Dialog.AcceptCall("replacement-sdp")
		}
	})

	err = stack.Start()
	if err != nil {
		return fmt.Errorf("–æ—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å—Ç–µ–∫–∞: %w", err)
	}

	log.Printf("üöÄ Enhanced Replacement —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ %s", config.ListenAddr)

	// –î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –∑–≤–æ–Ω–∫–∞ —Å Replaces
	time.Sleep(2 * time.Second)

	dialog, err := stack.MakeCallWithReplaces(
		"sip:target@example.com",
		"replacement-sdp",
		"original-call-id-123",
		"to-tag-456",
		"from-tag-789",
		map[string]string{"X-Replacement": "true"},
	)
	if err != nil {
		log.Printf("‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–º–µ—â–∞—é—â–µ–≥–æ –∑–≤–æ–Ω–∫–∞: %v", err)
	} else {
		log.Printf("üì§ –ó–∞–º–µ—â–∞—é—â–∏–π –∑–≤–æ–Ω–æ–∫ —Å–æ–∑–¥–∞–Ω: %s", dialog.GetCallID())
	}

	time.Sleep(3 * time.Second)
	return nil
}

// ExampleEnhancedCustomHeaders –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç —Ä–∞–±–æ—Ç—É —Å –∫–∞—Å—Ç–æ–º–Ω—ã–º–∏ –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏
func ExampleEnhancedCustomHeaders() error {
	fmt.Println("=== Enhanced Custom Headers Example ===")

	config := DefaultEnhancedSIPStackConfig()
	config.ListenAddr = "127.0.0.1:5086"
	config.Username = "custom_headers_test"

	// –î–æ–±–∞–≤–ª—è–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –∫–∞—Å—Ç–æ–º–Ω—ã–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏ –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
	config.CustomHeaders["X-Global-Header"] = "global-value"
	config.CustomHeaders["X-App-Version"] = "enhanced-1.0"

	stack, err := NewEnhancedSIPStack(config)
	if err != nil {
		return fmt.Errorf("–æ—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è SIP —Å—Ç–µ–∫–∞: %w", err)
	}
	defer stack.Stop()

	stack.SetOnIncomingCall(func(event *EnhancedIncomingCallEvent) {
		log.Printf("üì® –í—Ö–æ–¥—è—â–∏–π –∑–≤–æ–Ω–æ–∫ —Å –∫–∞—Å—Ç–æ–º–Ω—ã–º–∏ –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏:")
		for key, value := range event.CustomHeaders {
			log.Printf("   %s: %s", key, value)
		}
	})

	err = stack.Start()
	if err != nil {
		return fmt.Errorf("–æ—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å—Ç–µ–∫–∞: %w", err)
	}

	log.Printf("üöÄ Enhanced Custom Headers —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ %s", config.ListenAddr)

	// –î–æ–±–∞–≤–ª—è–µ–º –∫–∞—Å—Ç–æ–º–Ω—ã–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏ –≤–æ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
	stack.AddCustomHeader("X-Runtime-Header", "runtime-value")
	stack.AddCustomHeader("X-Session-ID", "session-12345")

	// –°–æ–∑–¥–∞–µ–º –∑–≤–æ–Ω–æ–∫ —Å –ª–æ–∫–∞–ª—å–Ω—ã–º–∏ –∫–∞—Å—Ç–æ–º–Ω—ã–º–∏ –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏
	localHeaders := map[string]string{
		"X-Call-Priority": "urgent",
		"X-Call-Category": "business",
		"X-Department":    "engineering",
		"X-Project":       "enhanced-sip-stack",
	}

	time.Sleep(1 * time.Second)
	dialog, err := stack.MakeCall("sip:test@example.com", "custom-sdp", localHeaders)
	if err != nil {
		log.Printf("‚ùå –û—à–∏–±–∫–∞ –∑–≤–æ–Ω–∫–∞ —Å –∫–∞—Å—Ç–æ–º–Ω—ã–º–∏ –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏: %v", err)
	} else {
		log.Printf("üì§ –ó–≤–æ–Ω–æ–∫ —Å –∫–∞—Å—Ç–æ–º–Ω—ã–º–∏ –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏: %s", dialog.GetCallID())
		log.Printf("   –õ–æ–∫–∞–ª—å–Ω—ã–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏: %v", localHeaders)
	}

	// –£–¥–∞–ª—è–µ–º –∫–∞—Å—Ç–æ–º–Ω—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫
	stack.RemoveCustomHeader("X-Runtime-Header")
	log.Printf("üóëÔ∏è –£–¥–∞–ª–µ–Ω –∑–∞–≥–æ–ª–æ–≤–æ–∫ X-Runtime-Header")

	time.Sleep(2 * time.Second)
	return nil
}

// ExampleSendCancel –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –æ—Ç–ø—Ä–∞–≤–∫—É CANCEL
func ExampleSendCancel() {
	fmt.Println("\n=== –ü—Ä–∏–º–µ—Ä –æ—Ç–ø—Ä–∞–≤–∫–∏ CANCEL ===")

	// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç–µ–∫–∞
	config := &EnhancedSIPStackConfig{
		ListenAddr: "127.0.0.1:5060",
		Username:   "user123",
		Domain:     "example.com",
	}

	stack, err := NewEnhancedSIPStack(*config)
	if err != nil {
		fmt.Printf("–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å—Ç–µ–∫–∞: %v\n", err)
		return
	}
	defer stack.Stop()

	// –°–æ–∑–¥–∞–Ω–∏–µ –∏—Å—Ö–æ–¥—è—â–µ–≥–æ –¥–∏–∞–ª–æ–≥–∞
	sdp := "v=0\r\no=- 123456 654321 IN IP4 127.0.0.1\r\n..."
	customHeaders := map[string]string{
		"User-Agent": "MyGoSoftphone/1.0",
	}

	dialog, err := NewEnhancedOutgoingSIPDialog(stack, "sip:bob@example.com", sdp, customHeaders)
	if err != nil {
		fmt.Printf("–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –¥–∏–∞–ª–æ–≥–∞: %v\n", err)
		return
	}

	// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º INVITE
	err = dialog.SendInvite()
	if err != nil {
		fmt.Printf("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ INVITE: %v\n", err)
		return
	}

	fmt.Printf("INVITE –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω. –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–∏–∞–ª–æ–≥–∞: %s\n", dialog.GetDialogState())

	// –ò–º–∏—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ 180 Ringing
	// –í —Ä–µ–∞–ª—å–Ω–æ–π —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ —ç—Ç–æ –±—É–¥–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
	time.Sleep(100 * time.Millisecond)

	// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º CANCEL –¥–ª—è –æ—Ç–º–µ–Ω—ã –∑–≤–æ–Ω–∫–∞
	err = dialog.SendCancel()
	if err != nil {
		fmt.Printf("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ CANCEL: %v\n", err)
		return
	}

	fmt.Printf("CANCEL –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω. –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–∏–∞–ª–æ–≥–∞: %s\n", dialog.GetDialogState())
	fmt.Printf("–°–æ—Å—Ç–æ—è–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: %s\n", dialog.GetTransactionState())
	fmt.Printf("–°–æ—Å—Ç–æ—è–Ω–∏–µ —Ç–∞–π–º–µ—Ä–æ–≤: %s\n", dialog.GetTimerState())
}

// ExampleSendReferWithReplaces –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –æ—Ç–ø—Ä–∞–≤–∫—É REFER —Å Replaces
func ExampleSendReferWithReplaces() {
	fmt.Println("\n=== –ü—Ä–∏–º–µ—Ä –æ—Ç–ø—Ä–∞–≤–∫–∏ REFER —Å Replaces ===")

	// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç–µ–∫–∞
	config := &EnhancedSIPStackConfig{
		ListenAddr: "127.0.0.1:5060",
		Username:   "user123",
		Domain:     "example.com",
	}

	stack, err := NewEnhancedSIPStack(*config)
	if err != nil {
		fmt.Printf("–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å—Ç–µ–∫–∞: %v\n", err)
		return
	}
	defer stack.Stop()

	// –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏–∞–ª–æ–≥–∞ (–ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ –∑–≤–æ–Ω–æ–∫ —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω)
	sdp := "v=0\r\no=- 123456 654321 IN IP4 127.0.0.1\r\n..."
	dialog, err := NewEnhancedOutgoingSIPDialog(stack, "sip:bob@example.com", sdp, nil)
	if err != nil {
		fmt.Printf("–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –¥–∏–∞–ª–æ–≥–∞: %v\n", err)
		return
	}

	// –ò–º–∏—Ç–∏—Ä—É–µ–º —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –¥–∏–∞–ª–æ–≥
	// –í —Ä–µ–∞–ª—å–Ω–æ–π —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ —ç—Ç–æ –±—É–¥–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —á–µ—Ä–µ–∑ FSM
	dialog.dialogState = EStateEstablished

	fmt.Printf("–î–∏–∞–ª–æ–≥ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –°–æ—Å—Ç–æ—è–Ω–∏–µ: %s\n", dialog.GetDialogState())

	// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º REFER –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞ –∑–≤–æ–Ω–∫–∞
	referTarget := "sip:charlie@example.com"
	replaceCallID := "replace-call-id-123" // Call-ID –∑–≤–æ–Ω–∫–∞, –∫–æ—Ç–æ—Ä—ã–π –∑–∞–º–µ–Ω—è–µ–º

	err = dialog.SendRefer(referTarget, replaceCallID)
	if err != nil {
		fmt.Printf("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ REFER: %v\n", err)
		return
	}

	fmt.Printf("REFER –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∫ %s\n", referTarget)
	fmt.Printf("–ó–∞–º–µ–Ω–∞ –∑–≤–æ–Ω–∫–∞ —Å Call-ID: %s\n", replaceCallID)
	fmt.Printf("–°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–∏–∞–ª–æ–≥–∞: %s\n", dialog.GetDialogState())
	fmt.Printf("–°–æ—Å—Ç–æ—è–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: %s\n", dialog.GetTransactionState())

	// –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö REFER
	fmt.Printf("–¶–µ–ª—å REFER: %s\n", dialog.referTarget)
	fmt.Printf("Replace Call-ID: %s\n", dialog.replaceCallID)
}

// ExampleDialogUsage –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ Enhanced SIP Dialog —Å —Ç—Ä–µ–º—è FSM
func ExampleDialogUsage() error {
	fmt.Println("=== –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è Enhanced SIP Dialog —Å —Ç—Ä–µ–º—è FSM ===")

	// –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–∏–º–µ—Ä—ã CANCEL –∏ REFER
	ExampleSendCancel()
	ExampleSendReferWithReplaces()

	return nil
}

// RunAllEnhancedExamples –∑–∞–ø—É—Å–∫–∞–µ—Ç –≤—Å–µ –ø—Ä–∏–º–µ—Ä—ã
func RunAllEnhancedExamples() {
	examples := []struct {
		name string
		fn   func() error
	}{
		{"Basic Enhanced SIP Stack", ExampleEnhancedSIPStack},
		{"Enhanced REFER", ExampleEnhancedREFER},
		{"Enhanced Call Replacement", ExampleEnhancedCallReplacement},
		{"Enhanced Custom Headers", ExampleEnhancedCustomHeaders},
		{"Dialog Usage", ExampleDialogUsage},
	}

	for _, example := range examples {
		fmt.Printf("\n" + strings.Repeat("=", 50) + "\n")
		fmt.Printf("Running: %s\n", example.name)
		fmt.Printf(strings.Repeat("=", 50) + "\n")

		err := example.fn()
		if err != nil {
			log.Printf("‚ùå –û—à–∏–±–∫–∞ –≤ –ø—Ä–∏–º–µ—Ä–µ '%s': %v", example.name, err)
		} else {
			log.Printf("‚úÖ –ü—Ä–∏–º–µ—Ä '%s' –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ", example.name)
		}

		time.Sleep(1 * time.Second)
	}

	fmt.Printf("\n" + strings.Repeat("=", 50) + "\n")
	fmt.Println("üéâ –í—Å–µ –ø—Ä–∏–º–µ—Ä—ã Enhanced SIP Stack –∑–∞–≤–µ—Ä—à–µ–Ω—ã!")
	fmt.Printf(strings.Repeat("=", 50) + "\n")
}
