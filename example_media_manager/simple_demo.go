package main

import (
	"fmt"
	"time"
)

// –£–ø—Ä–æ—â–µ–Ω–Ω–∞—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∫–æ–Ω—Ü–µ–ø—Ü–∏–∏ Media Manager
// –±–µ–∑ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –æ—Ç –≤–Ω–µ—à–Ω–∏—Ö –ø–∞–∫–µ—Ç–æ–≤

func main() {
	fmt.Println("üéØ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è Media Manager: Peer-to-Peer –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏—è")
	fmt.Println("============================================================")

	// –°–∏–º—É–ª—è—Ü–∏—è –≤—Å–µ—Ö —ç—Ç–∞–ø–æ–≤ —Ä–∞–±–æ—Ç—ã —Å –º–µ–¥–∏–∞ –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º

	// 1. –°–æ–∑–¥–∞–Ω–∏–µ Media Manager –Ω–∞ localhost
	fmt.Println("\nüì¶ 1. –°–æ–∑–¥–∞–Ω–∏–µ Media Manager –Ω–∞ localhost...")

	config := map[string]interface{}{
		"DefaultLocalIP": "127.0.0.1",
		"DefaultPtime":   20,
		"RTPPortRange": map[string]int{
			"Min": 10000,
			"Max": 10100,
		},
	}

	fmt.Printf("‚úÖ Media Manager —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ\n")
	fmt.Printf("   üìç –õ–æ–∫–∞–ª—å–Ω—ã–π IP: %s\n", config["DefaultLocalIP"])
	portRange := config["RTPPortRange"].(map[string]int)
	fmt.Printf("   üîå –î–∏–∞–ø–∞–∑–æ–Ω –ø–æ—Ä—Ç–æ–≤: %d-%d\n", portRange["Min"], portRange["Max"])

	// 2. –°–æ–∑–¥–∞–Ω–∏–µ SDP offer –∏ –ø–µ—Ä–≤–æ–π –º–µ–¥–∏–∞ —Å–µ—Å—Å–∏–∏ (Caller)
	fmt.Println("\nüöÄ 2. –°–æ–∑–¥–∞–Ω–∏–µ –ø–µ—Ä–≤–æ–π —Å–µ—Å—Å–∏–∏ (Caller) —Å SDP offer...")

	callerSessionID := "caller-session-abc123"
	callerLocalPort := 10000

	sdpOffer := fmt.Sprintf(`v=0
o=- %d %d IN IP4 127.0.0.1
s=Media Manager Offer
t=0 0
m=audio %d RTP/AVP 0 8
a=rtpmap:0 PCMU/8000
a=rtpmap:8 PCMA/8000
a=sendrecv`, time.Now().Unix(), time.Now().Unix(), callerLocalPort)

	fmt.Printf("üéâ –°–æ–±—ã—Ç–∏–µ: –°–µ—Å—Å–∏—è —Å–æ–∑–¥–∞–Ω–∞ [%s]\n", callerSessionID[:8]+"...")
	fmt.Printf("‚úÖ Caller —Å–µ—Å—Å–∏—è —Å–æ–∑–¥–∞–Ω–∞: %s\n", callerSessionID[:8]+"...")
	fmt.Printf("   üìç –õ–æ–∫–∞–ª—å–Ω—ã–π –∞–¥—Ä–µ—Å: 127.0.0.1:%d\n", callerLocalPort)
	fmt.Printf("   üìÑ SDP Offer (%d —Å–∏–º–≤–æ–ª–æ–≤):\n", len(sdpOffer))
	fmt.Printf("---\n%s\n---\n", sdpOffer)

	// 3. –°–æ–∑–¥–∞–Ω–∏–µ –≤—Ç–æ—Ä–æ–π —Å–µ—Å—Å–∏–∏ (Callee) –Ω–∞ –æ—Å–Ω–æ–≤–µ SDP offer
	fmt.Println("\nüìû 3. –°–æ–∑–¥–∞–Ω–∏–µ –≤—Ç–æ—Ä–æ–π —Å–µ—Å—Å–∏–∏ (Callee) –Ω–∞ –æ—Å–Ω–æ–≤–µ SDP offer...")

	calleeSessionID := "callee-session-def456"
	calleeLocalPort := 10001

	fmt.Printf("üéâ –°–æ–±—ã—Ç–∏–µ: –°–µ—Å—Å–∏—è —Å–æ–∑–¥–∞–Ω–∞ [%s]\n", calleeSessionID[:8]+"...")
	fmt.Printf("‚úÖ Callee —Å–µ—Å—Å–∏—è —Å–æ–∑–¥–∞–Ω–∞: %s\n", calleeSessionID[:8]+"...")
	fmt.Printf("   üìç –õ–æ–∫–∞–ª—å–Ω—ã–π –∞–¥—Ä–µ—Å: 127.0.0.1:%d\n", calleeLocalPort)
	fmt.Printf("   üìç –£–¥–∞–ª–µ–Ω–Ω—ã–π –∞–¥—Ä–µ—Å: 127.0.0.1:%d\n", callerLocalPort)

	// –°–æ–∑–¥–∞–Ω–∏–µ SDP answer
	sdpAnswer := fmt.Sprintf(`v=0
o=- %d %d IN IP4 127.0.0.1
s=Media Manager Session
t=0 0
m=audio %d RTP/AVP 0
a=rtpmap:0 PCMU/8000
a=sendrecv`, time.Now().Unix()+1, time.Now().Unix()+1, calleeLocalPort)

	fmt.Printf("‚úÖ SDP Answer —Å–æ–∑–¥–∞–Ω (%d —Å–∏–º–≤–æ–ª–æ–≤):\n", len(sdpAnswer))
	fmt.Printf("---\n%s\n---\n", sdpAnswer)

	// 4. –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
	fmt.Println("\nü§ù 4. –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è...")

	fmt.Printf("üîÑ –°–æ–±—ã—Ç–∏–µ: –°–µ—Å—Å–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞ [%s]\n", callerSessionID[:8]+"...")
	fmt.Printf("‚úÖ –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ!\n")
	fmt.Printf("   üìû Caller —Å–æ—Å—Ç–æ—è–Ω–∏–µ: active\n")
	fmt.Printf("   üìû Callee —Å–æ—Å—Ç–æ—è–Ω–∏–µ: active\n")
	fmt.Printf("   üîó Caller -> Callee: 127.0.0.1:%d -> 127.0.0.1:%d\n", callerLocalPort, calleeLocalPort)
	fmt.Printf("   üîó Callee -> Caller: 127.0.0.1:%d -> 127.0.0.1:%d\n", calleeLocalPort, callerLocalPort)

	// 5. –°–∏–º—É–ª—è—Ü–∏—è –ø–µ—Ä–µ–¥–∞—á–∏ –∞—É–¥–∏–æ –¥–∞–Ω–Ω—ã—Ö
	fmt.Println("\nüéµ 5. –°–∏–º—É–ª—è—Ü–∏—è –ø–µ—Ä–µ–¥–∞—á–∏ –∞—É–¥–∏–æ –¥–∞–Ω–Ω—ã—Ö...")

	fmt.Printf("üéµ –°–∏–º—É–ª—è—Ü–∏—è –∞—É–¥–∏–æ –ø–æ—Ç–æ–∫–æ–≤...\n")

	for i := 1; i <= 5; i++ {
		audioPacketSize := 160 // 160 –±–∞–π—Ç = 20ms –ø—Ä–∏ 8kHz

		fmt.Printf("   üì§ Caller –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–∞–∫–µ—Ç %d (%d –±–∞–π—Ç)\n", i, audioPacketSize)
		fmt.Printf("   üì• Callee –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–∞–∫–µ—Ç %d (%d –±–∞–π—Ç)\n", i, audioPacketSize)

		// –°–∏–º—É–ª—è—Ü–∏—è –∑–∞–¥–µ—Ä–∂–∫–∏ –ø–µ—Ä–µ–¥–∞—á–∏
		time.Sleep(20 * time.Millisecond)
	}

	fmt.Printf("‚úÖ –ü–µ—Ä–µ–¥–∞—á–∞ 5 –∞—É–¥–∏–æ –ø–∞–∫–µ—Ç–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∞\n")

	// 6. –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–µ—Å—Å–∏–π
	fmt.Println("\nüìä 6. –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–µ—Å—Å–∏–π:")

	currentTime := time.Now().Unix()

	// –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ Caller
	fmt.Printf("\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ Caller —Å–µ—Å—Å–∏–∏:\n")
	fmt.Printf("   üÜî ID: %s\n", callerSessionID[:8]+"...")
	fmt.Printf("   üìà –°–æ—Å—Ç–æ—è–Ω–∏–µ: active\n")
	fmt.Printf("   ‚è±Ô∏è –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: 1 —Å–µ–∫\n")
	fmt.Printf("   üïê –ü–æ—Å–ª–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å: %d\n", currentTime)
	fmt.Printf("   üéµ –ú–µ–¥–∏–∞ –ø–æ—Ç–æ–∫–æ–≤: 1\n")
	fmt.Printf("     üìª audio: –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ=5, –ø–æ–ª—É—á–µ–Ω–æ=5 –ø–∞–∫–µ—Ç–æ–≤\n")
	fmt.Printf("             –±–∞–π—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ=800, –ø–æ–ª—É—á–µ–Ω–æ=800\n")

	// –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ Callee
	fmt.Printf("\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ Callee —Å–µ—Å—Å–∏–∏:\n")
	fmt.Printf("   üÜî ID: %s\n", calleeSessionID[:8]+"...")
	fmt.Printf("   üìà –°–æ—Å—Ç–æ—è–Ω–∏–µ: active\n")
	fmt.Printf("   ‚è±Ô∏è –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: 1 —Å–µ–∫\n")
	fmt.Printf("   üïê –ü–æ—Å–ª–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å: %d\n", currentTime)
	fmt.Printf("   üéµ –ú–µ–¥–∏–∞ –ø–æ—Ç–æ–∫–æ–≤: 1\n")
	fmt.Printf("     üìª audio: –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ=5, –ø–æ–ª—É—á–µ–Ω–æ=5 –ø–∞–∫–µ—Ç–æ–≤\n")
	fmt.Printf("             –±–∞–π—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ=800, –ø–æ–ª—É—á–µ–Ω–æ=800\n")

	// 7. –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Å–µ—Å—Å–∏–π
	fmt.Println("\nüèÅ 7. –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Å–µ—Å—Å–∏–π...")

	fmt.Printf("üìû –ó–∞–∫—Ä—ã—Ç–∏–µ caller —Å–µ—Å—Å–∏–∏...\n")
	fmt.Printf("üö™ –°–æ–±—ã—Ç–∏–µ: –°–µ—Å—Å–∏—è –∑–∞–∫—Ä—ã—Ç–∞ [%s]\n", callerSessionID[:8]+"...")

	fmt.Printf("üìû –ó–∞–∫—Ä—ã—Ç–∏–µ callee —Å–µ—Å—Å–∏–∏...\n")
	fmt.Printf("üö™ –°–æ–±—ã—Ç–∏–µ: –°–µ—Å—Å–∏—è –∑–∞–∫—Ä—ã—Ç–∞ [%s]\n", calleeSessionID[:8]+"...")

	// –ò—Ç–æ–≥–∏
	fmt.Printf("\n‚úÖ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!\n")
	fmt.Printf("üéØ –í—Å–µ —ç—Ç–∞–ø—ã peer-to-peer –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã:\n")
	fmt.Printf("   ‚úì –°–æ–∑–¥–∞–Ω–∏–µ Media Manager\n")
	fmt.Printf("   ‚úì –°–æ–∑–¥–∞–Ω–∏–µ SDP offer –∏ caller —Å–µ—Å—Å–∏–∏\n")
	fmt.Printf("   ‚úì –°–æ–∑–¥–∞–Ω–∏–µ callee —Å–µ—Å—Å–∏–∏ –∏ SDP answer\n")
	fmt.Printf("   ‚úì –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è\n")
	fmt.Printf("   ‚úì –ü–µ—Ä–µ–¥–∞—á–∞ –¥–∞–Ω–Ω—ã—Ö\n")
	fmt.Printf("   ‚úì –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏\n")
	fmt.Printf("   ‚úì –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ\n")

	fmt.Println("\n============================================================")
	fmt.Println("üéì –û–±—É—á–∞—é—â–∏–µ –∑–∞–º–µ—Ç–∫–∏:")
	fmt.Println("")
	fmt.Println("–≠—Ç–æ—Ç –ø—Ä–∏–º–µ—Ä –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –∫–ª—é—á–µ–≤—ã–µ –∫–æ–Ω—Ü–µ–ø—Ü–∏–∏:")
	fmt.Println("‚Ä¢ SDP Offer/Answer negotiation –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è")
	fmt.Println("‚Ä¢ –í—ã–¥–µ–ª–µ–Ω–∏–µ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö RTP –ø–æ—Ä—Ç–æ–≤ –¥–ª—è –∫–∞–∂–¥–æ–π —Å–µ—Å—Å–∏–∏")
	fmt.Println("‚Ä¢ Bidirectional –º–µ–¥–∏–∞ –ø–æ—Ç–æ–∫ –º–µ–∂–¥—É –¥–≤—É–º—è endpoints")
	fmt.Println("‚Ä¢ Event-driven –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Å–µ—Å—Å–∏–π")
	fmt.Println("‚Ä¢ –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–∞–º–∏ –∏ cleanup")
	fmt.Println("")
	fmt.Println("üí° –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏:")
	fmt.Println("‚Ä¢ –í–º–µ—Å—Ç–æ —Å–∏–º—É–ª—è—Ü–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –Ω–∞—Å—Ç–æ—è—â–∏–π RTP —Å—Ç–µ–∫")
	fmt.Println("‚Ä¢ –ú–µ–¥–∏–∞ –¥–∞–Ω–Ω—ã–µ –ø–µ—Ä–µ–¥–∞—é—Ç—Å—è —á–µ—Ä–µ–∑ UDP —Å–æ–∫–µ—Ç—ã")
	fmt.Println("‚Ä¢ –î–æ–±–∞–≤–ª—è–µ—Ç—Å—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ")
	fmt.Println("‚Ä¢ –†–µ–∞–ª–∏–∑—É–µ—Ç—Å—è RTCP –¥–ª—è –∫–æ–Ω—Ç—Ä–æ–ª—è –∫–∞—á–µ—Å—Ç–≤–∞")
	fmt.Println("‚Ä¢ –ò–Ω—Ç–µ–≥—Ä–∏—Ä—É–µ—Ç—Å—è —Å SIP –ø—Ä–æ—Ç–æ–∫–æ–ª–æ–º –¥–ª—è —Å–∏–≥–Ω–∞–ª–∏–Ω–≥–∞")
	fmt.Println("============================================================")
}
